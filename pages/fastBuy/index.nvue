<template>
    <view class="tabs">
		<!-- <view :style="{ height: statusBarHeight }" class="uni-status-bar"></view> 
		<view class="hederBar">
			<view class="titleBar">
				<image src="/static/image/index/timelimit-title.png" class="titleImg" />
			</view>
			<view class="iconLaftBar" @click="goPage(-1)">
				<image src="/static/image/common/back-icon.jpg"  class="backIcon"/>
			</view>
		</view> -->
		<view class="timeBar"  ref="tabbar1">
			<view class="timeBarMark"></view>
			<view class="nowBayBox"  :class="isTap ? 'scroll-view-animation':''" :style="{left: indicatorLineLeft + 'px', width: indicatorLineWidth + 'px'}">
				<view class="nowBayActive"></view>
				<image src="/static/image/index/jiantou.jpg" class="nowBayActiveImg" />
			</view>
			<view class="listBox">
				<view class="timeBox" v-for="(item,index) in tabList" :key="index" @click="tabClick(index)">
					<text class="timeBoxText" :class="{activeTime:item.active}">{{item.time}}</text>
					<text class="timeBoxText" :class="{activeTime:item.active}">{{item.name}}</text>
				</view>
			</view>
		</view>
		<swiper class="tab-box" ref="swiper1" :current="tabIndex" :duration="300" @change="onswiperchange">
			<swiper-item class="swiper-item" v-for="(page, index) in tabList" :key="index">
				<data-list class="page-item" :type="page.type" ref="page"></data-list>
			</swiper-item>
		</swiper>

    </view>
</template>
<script>
	import $common from "@/common/common.js";
	import $http from "@/common/request.js";
	var statusBarHeight = uni.getSystemInfoSync().statusBarHeight + 'px'
	import dataList from './list.nvue';
    export default {
		components: {
			dataList
		},
        data() {
            return {
				statusBarHeight:statusBarHeight,
				tabList:[
					{time:'00:00',type:6,active:false,value:0},
					{time:'10:00',type:7,active:false,value:10},
					{time:'12:00',type:8,active:false,value:12},
					{time:'15:00',type:9,active:false,value:15},
					{time:'20:00',type:10,active:false,value:20},

				],
				indicatorLineLeft:0,
				indicatorLineWidth:0,
				isTap: false,
				tabIndex:0
		   }
        },
       onReady() {
		 setTimeout(()=> {
			 this.pageList = this.$refs.page;
			 this.switchTab(this.tabIndex);
			 
		 }, 500);
		
       },
	   onShow:function(){
		   
	   },
		onLoad:function() {
			this.indicatorLineWidth = this.$store.state.systemInfo.windowWidth / 5
			this.initTime()
        },

        methods: {
			goPage:function(url,type){
				$common.goPage(url,type)
			},
			initTime(){
				let nowTime = new Date().getHours()
				this.tabList.forEach((item,index)=>{
					if(this.tabList[index+1]){
						if(nowTime>=item.value&&nowTime<this.tabList[index+1].value){
							item.name = '正在热抢'
							this.indicatorLineLeft = index * this.indicatorLineWidth
							item.active = true
							this.tabIndex = index
						}else if(nowTime>item.value){
							item.name = '今日已抢'
							item.active = false
						}else{
							item.name = '即将开抢'
							item.active = false
						}
					}else{
						if(nowTime>=item.value){
							item.name = '正在热抢'
							item.active = true
							this.tabIndex = index
							this.indicatorLineLeft = index * this.indicatorLineWidth
						}else{
							item.name = '即将开抢'
							item.active = false
						}
					}
					
				})
			},
			tabClick(clickIndex){
				if (this.pageList[clickIndex].dataList.length === 0) {
					this.loadTabData(clickIndex);
				}
				this.tabList.forEach((item,index)=>{
					if(clickIndex == index){
						item.active = true
						this.indicatorLineLeft = index * this.indicatorLineWidth
						this.tabIndex = index
					}else{
						item.active = false
					}
				})
			},
			onswiperchange(e) {
				let index = e.target.current || e.detail.current;
				this.switchTab(index);
			},

			switchTab(index) {
				if (this.pageList[index].dataList.length === 0) {
					this.loadTabData(index);
				}
				if (this.tabIndex === index) {
					return;
				}
				this.tabList.forEach((item,itemIndex)=>{
					if(itemIndex == index){
						item.active = true
					}else{
						item.active = false
					}
				})
				this.isTap = true
				this.indicatorLineLeft = index * this.indicatorLineWidth
				this.tabIndex = index;
			
			},
			loadTabData(index) {
				this.pageList[index].loadData();
			},
            
        },
	
    }
</script>

<style>
	 /* #ifndef APP-PLUS */
    page {
        width: 100%;
        min-height: 100%;
        display: flex;
    }
	
	 /* #endif */
	.uni-status-bar{background-color: #ffffff;}
	.tabs {
	    flex: 1;
	    flex-direction: column;
	    overflow: hidden;
	     background-color: #f2f2f2;
	}
	.hederBar{
		background-color: #ffffff;
		height:100rpx;
		position: relative;
	}
	.iconLaftBar{
		height:100rpx;
		width: 100rpx;
		justify-content: center;
		align-items: center;
		position:absolute;
		left:0;
		top:0;
	}
	
	.backIcon{
		width:20rpx ;
		height:36rpx;
	}
	.titleImg{
		width: 172rpx;
		height:36rpx;
	}
	.titleBar{
		justify-content: center;
		align-items: center;
		flex: 1;
	}
	.timeBar{
		height:120rpx;
		width: 750rpx;
	}
	.timeBarMark{
		background-color: #33363d;
		height:100rpx;
		width: 750rpx;
	}
	.listBox{
		position: absolute;
		top:0;
		left:0;
		flex-direction: row;
		justify-content: center;
		align-items: center;
		width: 750rpx;
		height:100rpx;
		/* #ifndef APP-PLUS */
		display: flex;
		 /* #endif */
	}
	.nowBayBox{
		width: 150rpx;
		height:120rpx;
		position: absolute;
		top:0;
		left:150rpx;
	}
	.nowBayActive{
		width: 150rpx;
		height:100rpx;
		background-color: #ff4751;
	}
	.nowBayActiveImg{
		width: 25rpx;
		height: 12rpx;
		position: absolute;
		left: 65rpx;
		top:100rpx;
	}
	.timeBox{
		width: 150rpx;
	}
	.timeBoxText{
		font-size: 28rpx;
		color:#7a7d84;
		width: 150rpx;
		text-align: center;
	}
	.activeTime{
		color:#ffffff;
	}
	
	.tab-box {
		flex: 1;
	}
	.scroll-view-animation {
		transition-duration: 0.2s;
		transition-property: left;
	}
</style>
