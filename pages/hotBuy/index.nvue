<template>
    <view class="tabs">
		<!-- <view :style="{ height: statusBarHeight }" class="uni-status-bar"></view> --> <!-- 状态栏占位符 -->
	<!-- 	<view class="hederBar">
			<view class="titleBar">
				<image src="/static/image/index/realtime-title.png" class="titleImg" />
			</view>
			<view class="iconLaftBar" @click="goPage(-1)">
				<image src="/static/image/common/back-icon.jpg"  class="backIcon"/>
			</view>
		</view> -->
		<view class="hotBar">
			<view class="hotBtnBox">
				<view class="leftBox" @click="saleType(1)">
					<text class="btnText" :class="{btnActive:tabList[0].active}">{{tabList[0].label}}</text>
				</view>
				<view class="rightBox" @click="saleType(2)">
					<text class="btnText" :class="{btnActive:tabList[1].active}">{{tabList[1].label}}</text>
				</view>
			</view>
			<scroll-view ref="tabbar1" id="tab-bar" class="tab-bar" :scroll-x="true" :show-scrollbar="false" scroll-with-animation="true"  :scroll-left="scrollInto">
				<view style="flex-direction: column;">
					<view style="flex-direction: row;">
						<view class="uni-tab-item" v-for="(tab,index) in subList" :key="index"  @click="tabClick(index)" :ref="'tabitem'+index">
							<text class="uni-tab-item-title" :class="tabIndex==index ? 'uni-tab-item-title-active' : ''">{{tab.label}}</text>
							<image v-if="tabIndex==index" class="tabimg" src="../../static/image/index/bolang_red.png"></image>
							<image v-else class="tabimg" src="../../static/img/bolang_empty.png"></image>
						</view>
					</view>
					<!-- <view class="scroll-view-indicator" :style="{width:tabWidth+'px'}">
						<view ref="underline" class="scroll-view-underline" :class="isTap ? 'scroll-view-animation':''" :style="{left: indicatorLineLeft + 'px', width: indicatorLineWidth + 'px'}"></view>
					</view> -->
				</view>
			</scroll-view>
		</view>
		<view class="tab-bar-line"></view>
		<swiper class="tab-box" ref="swiper1" :current="tabIndex" :duration="300" @change="onswiperchange">
			<swiper-item class="swiper-item" v-for="(page, index) in subList" :key="index">
				<data-list class="page-item" :cid="page.cid" ref="page"></data-list>
			</swiper-item>
		</swiper>

    </view>
</template>
<script>
	import $common from "@/common/common.js";
	import $http from "@/common/request.js";
	var statusBarHeight = uni.getSystemInfoSync().statusBarHeight + 'px'
	import dataList from './list.nvue';
	// #ifdef APP-PLUS
	const dom = weex.requireModule('dom');
	// #endif
    export default {
		components: {
			dataList
		},
        data() {
            return {
				statusBarHeight:statusBarHeight,
				tabList:[
					{saleType:1,label:'近两小时',active:true},
					{saleType:2,label:'全天榜单',active:false},

				],
				//0全部，1女装，2男装，3内衣，4美妆，5配饰，6鞋品，7箱包，8儿童，9母婴，10居家，11美食，12数码，13家电，14其他，15车品，16文体，17宠物
				subList:[
					{cid:0,label:'全部',active:true},
					{cid:1,label:'女装',active:false},
					{cid:2,label:'男装',active:false},
					{cid:3,label:'内衣',active:false},
					{cid:4,label:'美妆',active:false},
					{cid:5,label:'配饰',active:false},
					{cid:6,label:'鞋品',active:false},
					{cid:7,label:'箱包',active:false},
					{cid:8,label:'儿童',active:false},
					{cid:9,label:'母婴',active:false},
					{cid:10,label:'居家',active:false},
					{cid:11,label:'美食',active:false},
					{cid:12,label:'数码',active:false},
					{cid:13,label:'家电',active:false},
					{cid:14,label:'其他',active:false},
					{cid:15,label:'车品',active:false},
					{cid:16,label:'文体',active:false},
					{cid:17,label:'宠物',active:false},
					
				],
				scrollInto:0,
				indicatorLineLeft:0,
				indicatorLineWidth:0,
				isTap: false,
				tabIndex:0,
				menuTabIndex:0,
				bili:0,
				allianceScale:0
		   }
        },
       onReady() {
		   // #ifdef APP-PLUS-NVUE
		   dom.getComponentRect(this.$refs['tabitem0'][0], res => {
		   	this.indicatorLineWidth = res.size.width;
		   });
		   //#endif
		   
		   // #ifndef APP-PLUS-NVUE
		   uni.createSelectorQuery().in(this).select('.uni-tab-item').fields({
		   	dataset: true,
		   	size: true,
		   }, (res) => {
		   	this.indicatorLineWidth = res.width;
		   }).exec();
		   //#endif
		setTimeout(()=> {
			 this.pageList = this.$refs.page;
			 this.switchTab(this.tabIndex);
		 }, 500);
		
       },
	   onShow:function(){
		   
	   },
		onLoad:function() {
			this.mybili();
        },

        methods: {
			goPage:function(url,type){
				$common.goPage(url,type)
			},	
			saleType(index){
				this.subList.forEach((v,i)=>{
					this.pageList[i].dataList = []
					this.pageList[i].saleTypeFn(index)
				})
				this.tabList.forEach((item,tabindex)=>{
					if(item.saleType == index){
						item.active = true
					}else{
						item.active = false
					}
				})
				this.switchTab(this.tabIndex);
			},
			scroll(e){
				console.log(e.detail.scrollLeft)
			},
			tabClick(clickIndex){
				if (this.pageList[clickIndex].dataList.length === 0) {
					this.loadTabData(clickIndex);
				}
				
				this.subList.forEach((item,index)=>{
					if(clickIndex == index){
						item.active = true;
					}else{
						item.active = false
					}
				})
				this.tabIndex = clickIndex;
				//this.isTap = true
				//this.indicatorLineLeft = clickIndex * this.indicatorLineWidth
				this.scrollAnimation(clickIndex)
			},
			onswiperchange(e) {
				let index = e.target.current || e.detail.current;
				this.switchTab(index);
			},
			scrollAnimation(index){
				let scrollData = (this.subList[index].cid-3)*this.indicatorLineWidth;
				if(scrollData<0){
					scrollData = 0
				}
				if(scrollData>(this.subList.length*this.indicatorLineWidth)){
					scrollData = this.subList.length*this.indicatorLineWidth
				}
				this.scrollInto = scrollData
				
			},
			async mybili(){
				 let res = await $http.post('/api/index/getScale')
				 this.bili = res.data.scale
				 this.allianceScale = res.data.allianceScale
			},
			switchTab(index) {
				
				if (this.pageList[index].dataList.length === 0) {
					this.loadTabData(index);
				}
 				if (this.tabIndex === index) {
					return;
				}
				
				this.subList.forEach((item,itemIndex)=>{
					if(itemIndex == index){
						item.active = true
					}else{
						item.active = false
					}
				})
				this.tabIndex = index;
				//this.isTap = true
				//this.indicatorLineLeft = index * this.indicatorLineWidth
				this.scrollAnimation(index)
			},
			loadTabData(index) {
				this.pageList[index].loadData();
			},
            
        },
	
    }
</script>

<style>
	 /* #ifndef APP-PLUS */
    page {
        width: 100%;
        min-height: 100%;
        display: flex;
    }
	
	 /* #endif */
	.uni-status-bar{background-color: #ffffff;}
	.tabs {
	    flex: 1;
	    flex-direction: column;
	    overflow: hidden;
	    background-color: #f2f2f2;
	}
	.tabimg {
		width: 52rpx;
		height: 8rpx;
	}
	.hederBar{
		background-color: #ffffff;
		height:100rpx;
		position: relative;
	}
	.iconLaftBar{
		height:100rpx;
		width: 100rpx;
		justify-content: center;
		align-items: center;
		position:absolute;
		left:0;
		top:0;
	}
	
	.backIcon{
		width:20rpx ;
		height:36rpx;
	}
	.titleImg{
		width: 172rpx;
		height:36rpx;
	}
	.titleBar{
		justify-content: center;
		align-items: center;
		flex: 1;
	}
	.hotBar{
		width: 750rpx;
		background-color: #ffffff;
	}
	
	.hotBtnBox{
		justify-content: center;
		align-items: center;
		flex-direction: row;
	}
	.leftBox,.rightBox{
		width: 375rpx;
		height:120rpx;
		justify-content:center;
		/* #ifndef APP-PLUS */
		display: flex;
		 /* #endif */
		
	}
	.leftBox{
		margin-right: 30rpx;
		align-items: flex-end;
	}
	.rightBox{
		margin-left: 30rpx;
		align-items: flex-start;
	}
	.btnText{
		width: 240rpx;
		height:70rpx;
		background-color: #f6f6f6;
		border-radius: 60rpx;
		font-size: 30rpx;
		text-align: center;
		line-height: 70rpx;
	}
	
	.btnActive{
		background-color: rgba(51, 51, 51,.7);
		color:#FFF000;
	}
	.menuBar{
		width: 750upx;
		height: 80upx;
	}
	
	
	
	
	
	
	.tab-bar {
		width: 750upx;
		height: 84upx;
		flex-direction: row;
		/* #ifndef APP-PLUS */
		white-space: nowrap;
		/* #endif */
	}
	
	/* #ifndef APP-NVUE */
	.tab-bar ::-webkit-scrollbar {
	    display: none;  
	    width: 0 !important;  
	    height: 0 !important;  
	    -webkit-appearance: none;  
	    background: transparent;  
	}
	/* #endif */
	
	
	
	.scroll-view-indicator {
		position: relative;
		height: 2px;
		background-color: transparent;
	}
	
	.scroll-view-underline {
		position: absolute;
		top: 0;
		bottom: 0;
		width: 0;
		background-color: #cb072b;
	}
	
	.scroll-view-animation {
		transition-duration: 0.2s;
		transition-property: left;
	}
	
	.tab-bar-line {
		height: 1upx;
		background-color: #cccccc;
	}
	
	.tab-box {
		flex: 1;
	}
	
	.uni-tab-item {
		/* #ifndef APP-PLUS */
		display: inline-block;
		/* #endif */
		width: 120rpx;
		flex-wrap: nowrap;
/* 		padding-left: 20rpx;
		padding-right: 20rpx; */
		align-items: center;
		justify-content: center;
	}
	
	.uni-tab-item-title {
		height: 60rpx;
		line-height:70rpx;
		font-size: 28rpx;
		color: #666666;
	}
	
	.uni-tab-item-title-active {
		color: #333;
		font-weight: bold;
		font-size: 32rpx;
	}
	.swiper-item {
		flex: 1;
		flex-direction: column;
	}
	
	.page-item {
		flex: 1;
		flex-direction: row;
		position: absolute;
		left: 0;
		top: 0;
		right: 0;
		bottom: 0;
	}
	.tab-bar-line {
		height: 1upx;
		background-color: #cccccc;
	}
</style>
